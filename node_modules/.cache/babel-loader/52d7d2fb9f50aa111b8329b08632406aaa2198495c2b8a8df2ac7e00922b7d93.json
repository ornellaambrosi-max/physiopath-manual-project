{"ast":null,"code":"// Utility generiche usabili ovunque\n\n// join classi (se non vuoi duplicare la piccola cn locale)\nexport function cn(...classes) {\n  return classes.filter(Boolean).join(\" \");\n}\n\n// numeri\nexport function clamp(value, min = 0, max = 100) {\n  const n = Number(value) || 0;\n  return Math.max(min, Math.min(max, n));\n}\nexport function pct(value, min = 0, max = 100) {\n  const c = clamp(value, min, max);\n  return (c - min) / (max - min) * 100;\n}\n\n// formattazioni\nexport function formatNumber(n, locale = \"it-IT\", opts = {}) {\n  try {\n    return new Intl.NumberFormat(locale, opts).format(n);\n  } catch {\n    return String(n);\n  }\n}\nexport function formatDate(d, locale = \"it-IT\", opts = {}) {\n  try {\n    const date = d instanceof Date ? d : new Date(d);\n    return date.toLocaleDateString(locale, {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"2-digit\",\n      ...opts\n    });\n  } catch {\n    return String(d);\n  }\n}\n\n// oggetti/array\nexport function deepMerge(target, source) {\n  const out = {\n    ...target\n  };\n  for (const k of Object.keys(source || {})) {\n    if (source[k] && typeof source[k] === \"object\" && !Array.isArray(source[k])) {\n      out[k] = deepMerge(out[k] || {}, source[k]);\n    } else {\n      out[k] = source[k];\n    }\n  }\n  return out;\n}\nexport default {\n  cn,\n  clamp,\n  pct,\n  formatNumber,\n  formatDate,\n  deepMerge\n};","map":{"version":3,"names":["cn","classes","filter","Boolean","join","clamp","value","min","max","n","Number","Math","pct","c","formatNumber","locale","opts","Intl","NumberFormat","format","String","formatDate","d","date","Date","toLocaleDateString","year","month","day","deepMerge","target","source","out","k","Object","keys","Array","isArray"],"sources":["C:/Users/Lorenzo/Downloads/physiopath-manual-project/src/index.js"],"sourcesContent":["// Utility generiche usabili ovunque\r\n\r\n// join classi (se non vuoi duplicare la piccola cn locale)\r\nexport function cn(...classes) {\r\n  return classes.filter(Boolean).join(\" \");\r\n}\r\n\r\n// numeri\r\nexport function clamp(value, min = 0, max = 100) {\r\n  const n = Number(value) || 0;\r\n  return Math.max(min, Math.min(max, n));\r\n}\r\n\r\nexport function pct(value, min = 0, max = 100) {\r\n  const c = clamp(value, min, max);\r\n  return ((c - min) / (max - min)) * 100;\r\n}\r\n\r\n// formattazioni\r\nexport function formatNumber(n, locale = \"it-IT\", opts = {}) {\r\n  try {\r\n    return new Intl.NumberFormat(locale, opts).format(n);\r\n  } catch {\r\n    return String(n);\r\n  }\r\n}\r\n\r\nexport function formatDate(d, locale = \"it-IT\", opts = {}) {\r\n  try {\r\n    const date = d instanceof Date ? d : new Date(d);\r\n    return date.toLocaleDateString(locale, {\r\n      year: \"numeric\",\r\n      month: \"short\",\r\n      day: \"2-digit\",\r\n      ...opts,\r\n    });\r\n  } catch {\r\n    return String(d);\r\n  }\r\n}\r\n\r\n// oggetti/array\r\nexport function deepMerge(target, source) {\r\n  const out = { ...target };\r\n  for (const k of Object.keys(source || {})) {\r\n    if (\r\n      source[k] &&\r\n      typeof source[k] === \"object\" &&\r\n      !Array.isArray(source[k])\r\n    ) {\r\n      out[k] = deepMerge(out[k] || {}, source[k]);\r\n    } else {\r\n      out[k] = source[k];\r\n    }\r\n  }\r\n  return out;\r\n}\r\n\r\nexport default {\r\n  cn,\r\n  clamp,\r\n  pct,\r\n  formatNumber,\r\n  formatDate,\r\n  deepMerge,\r\n};\r\n"],"mappings":"AAAA;;AAEA;AACA,OAAO,SAASA,EAAEA,CAAC,GAAGC,OAAO,EAAE;EAC7B,OAAOA,OAAO,CAACC,MAAM,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AAC1C;;AAEA;AACA,OAAO,SAASC,KAAKA,CAACC,KAAK,EAAEC,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAG,GAAG,EAAE;EAC/C,MAAMC,CAAC,GAAGC,MAAM,CAACJ,KAAK,CAAC,IAAI,CAAC;EAC5B,OAAOK,IAAI,CAACH,GAAG,CAACD,GAAG,EAAEI,IAAI,CAACJ,GAAG,CAACC,GAAG,EAAEC,CAAC,CAAC,CAAC;AACxC;AAEA,OAAO,SAASG,GAAGA,CAACN,KAAK,EAAEC,GAAG,GAAG,CAAC,EAAEC,GAAG,GAAG,GAAG,EAAE;EAC7C,MAAMK,CAAC,GAAGR,KAAK,CAACC,KAAK,EAAEC,GAAG,EAAEC,GAAG,CAAC;EAChC,OAAQ,CAACK,CAAC,GAAGN,GAAG,KAAKC,GAAG,GAAGD,GAAG,CAAC,GAAI,GAAG;AACxC;;AAEA;AACA,OAAO,SAASO,YAAYA,CAACL,CAAC,EAAEM,MAAM,GAAG,OAAO,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EAC3D,IAAI;IACF,OAAO,IAAIC,IAAI,CAACC,YAAY,CAACH,MAAM,EAAEC,IAAI,CAAC,CAACG,MAAM,CAACV,CAAC,CAAC;EACtD,CAAC,CAAC,MAAM;IACN,OAAOW,MAAM,CAACX,CAAC,CAAC;EAClB;AACF;AAEA,OAAO,SAASY,UAAUA,CAACC,CAAC,EAAEP,MAAM,GAAG,OAAO,EAAEC,IAAI,GAAG,CAAC,CAAC,EAAE;EACzD,IAAI;IACF,MAAMO,IAAI,GAAGD,CAAC,YAAYE,IAAI,GAAGF,CAAC,GAAG,IAAIE,IAAI,CAACF,CAAC,CAAC;IAChD,OAAOC,IAAI,CAACE,kBAAkB,CAACV,MAAM,EAAE;MACrCW,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,OAAO;MACdC,GAAG,EAAE,SAAS;MACd,GAAGZ;IACL,CAAC,CAAC;EACJ,CAAC,CAAC,MAAM;IACN,OAAOI,MAAM,CAACE,CAAC,CAAC;EAClB;AACF;;AAEA;AACA,OAAO,SAASO,SAASA,CAACC,MAAM,EAAEC,MAAM,EAAE;EACxC,MAAMC,GAAG,GAAG;IAAE,GAAGF;EAAO,CAAC;EACzB,KAAK,MAAMG,CAAC,IAAIC,MAAM,CAACC,IAAI,CAACJ,MAAM,IAAI,CAAC,CAAC,CAAC,EAAE;IACzC,IACEA,MAAM,CAACE,CAAC,CAAC,IACT,OAAOF,MAAM,CAACE,CAAC,CAAC,KAAK,QAAQ,IAC7B,CAACG,KAAK,CAACC,OAAO,CAACN,MAAM,CAACE,CAAC,CAAC,CAAC,EACzB;MACAD,GAAG,CAACC,CAAC,CAAC,GAAGJ,SAAS,CAACG,GAAG,CAACC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAEF,MAAM,CAACE,CAAC,CAAC,CAAC;IAC7C,CAAC,MAAM;MACLD,GAAG,CAACC,CAAC,CAAC,GAAGF,MAAM,CAACE,CAAC,CAAC;IACpB;EACF;EACA,OAAOD,GAAG;AACZ;AAEA,eAAe;EACbhC,EAAE;EACFK,KAAK;EACLO,GAAG;EACHE,YAAY;EACZO,UAAU;EACVQ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lorenzo\\\\Downloads\\\\physiopath-manual-project\\\\src\\\\components\\\\screening\\\\SymptomControls.jsx\";\nimport React from 'react';\nimport { Label } from \"@/components/ui/label\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { cn } from \"@/lib/utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SymptomControls({\n  sensationTypes,\n  currentSensation,\n  onSensationChange\n}) {\n  const handleTypeChange = type => {\n    onSensationChange({\n      ...currentSensation,\n      type,\n      color: sensationTypes[type].color\n    });\n  };\n  const handleIntensityChange = value => {\n    onSensationChange({\n      ...currentSensation,\n      intensity: value[0]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6 p-4 border rounded-xl bg-white dark:bg-warm-gray-800 border-sage-200 dark:border-warm-gray-700\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        className: \"font-medium text-base mb-3 block\",\n        children: \"1. Select Sensation Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-2\",\n        children: Object.keys(sensationTypes).map(type => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTypeChange(type),\n          className: cn(\"p-2 text-sm rounded-lg border text-center transition-all duration-200\", currentSensation.type === type ? 'border-2 font-semibold shadow-md' : 'hover:shadow-sm'),\n          style: {\n            borderColor: currentSensation.type === type ? sensationTypes[type].color : 'var(--sage-200)',\n            backgroundColor: currentSensation.type === type ? `${sensationTypes[type].color}20` : 'transparent'\n          },\n          children: type\n        }, type, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        htmlFor: \"intensity-slider\",\n        className: \"font-medium text-base mb-3 block\",\n        children: \"2. Set Intensity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center gap-4\",\n        children: [/*#__PURE__*/_jsxDEV(Slider, {\n          id: \"intensity-slider\",\n          min: 0,\n          max: 10,\n          step: 1,\n          value: [currentSensation.intensity],\n          onValueChange: handleIntensityChange,\n          style: {\n            '--slider-thumb-color': currentSensation.color\n          },\n          className: \"[&>span:first-child]:bg-[var(--slider-thumb-color)]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Badge, {\n          variant: \"outline\",\n          className: \"text-lg w-12 h-12 flex items-center justify-center rounded-full\",\n          style: {\n            borderColor: currentSensation.color,\n            color: currentSensation.color\n          },\n          children: currentSensation.intensity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between text-xs text-warm-gray-500 mt-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"No Sensation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Worst Imaginable\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        className: \"font-medium text-base mb-3 block\",\n        children: \"Legend\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-1\",\n        children: Object.entries(sensationTypes).map(([type, {\n          color\n        }]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 text-sm\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-4 h-4 rounded-full\",\n            style: {\n              backgroundColor: color\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)]\n        }, type, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = SymptomControls;\nvar _c;\n$RefreshReg$(_c, \"SymptomControls\");","map":{"version":3,"names":["React","Label","Slider","Badge","cn","jsxDEV","_jsxDEV","SymptomControls","sensationTypes","currentSensation","onSensationChange","handleTypeChange","type","color","handleIntensityChange","value","intensity","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","onClick","style","borderColor","backgroundColor","htmlFor","id","min","max","step","onValueChange","variant","entries","_c","$RefreshReg$"],"sources":["C:/Users/Lorenzo/Downloads/physiopath-manual-project/src/components/screening/SymptomControls.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Label } from \"@/components/ui/label\";\r\nimport { Slider } from \"@/components/ui/slider\";\r\nimport { Badge } from \"@/components/ui/badge\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nexport default function SymptomControls({ sensationTypes, currentSensation, onSensationChange }) {\r\n  const handleTypeChange = (type) => {\r\n    onSensationChange({\r\n      ...currentSensation,\r\n      type,\r\n      color: sensationTypes[type].color,\r\n    });\r\n  };\r\n\r\n  const handleIntensityChange = (value) => {\r\n    onSensationChange({\r\n      ...currentSensation,\r\n      intensity: value[0],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6 p-4 border rounded-xl bg-white dark:bg-warm-gray-800 border-sage-200 dark:border-warm-gray-700\">\r\n      <div>\r\n        <Label className=\"font-medium text-base mb-3 block\">1. Select Sensation Type</Label>\r\n        <div className=\"grid grid-cols-2 gap-2\">\r\n          {Object.keys(sensationTypes).map((type) => (\r\n            <button\r\n              key={type}\r\n              onClick={() => handleTypeChange(type)}\r\n              className={cn(\r\n                \"p-2 text-sm rounded-lg border text-center transition-all duration-200\",\r\n                currentSensation.type === type\r\n                  ? 'border-2 font-semibold shadow-md'\r\n                  : 'hover:shadow-sm'\r\n              )}\r\n              style={{\r\n                borderColor: currentSensation.type === type ? sensationTypes[type].color : 'var(--sage-200)',\r\n                backgroundColor: currentSensation.type === type ? `${sensationTypes[type].color}20` : 'transparent',\r\n              }}\r\n            >\r\n              {type}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <Label htmlFor=\"intensity-slider\" className=\"font-medium text-base mb-3 block\">2. Set Intensity</Label>\r\n        <div className=\"flex items-center gap-4\">\r\n          <Slider\r\n            id=\"intensity-slider\"\r\n            min={0}\r\n            max={10}\r\n            step={1}\r\n            value={[currentSensation.intensity]}\r\n            onValueChange={handleIntensityChange}\r\n            style={{ '--slider-thumb-color': currentSensation.color }}\r\n            className=\"[&>span:first-child]:bg-[var(--slider-thumb-color)]\"\r\n          />\r\n          <Badge \r\n            variant=\"outline\" \r\n            className=\"text-lg w-12 h-12 flex items-center justify-center rounded-full\" \r\n            style={{ borderColor: currentSensation.color, color: currentSensation.color }}\r\n          >\r\n            {currentSensation.intensity}\r\n          </Badge>\r\n        </div>\r\n        <div className=\"flex justify-between text-xs text-warm-gray-500 mt-1\">\r\n          <span>No Sensation</span>\r\n          <span>Worst Imaginable</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div>\r\n        <Label className=\"font-medium text-base mb-3 block\">Legend</Label>\r\n        <div className=\"space-y-1\">\r\n          {Object.entries(sensationTypes).map(([type, { color }]) => (\r\n            <div key={type} className=\"flex items-center gap-2 text-sm\">\r\n              <div className=\"w-4 h-4 rounded-full\" style={{ backgroundColor: color }} />\r\n              <span>{type}</span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}